{"version":3,"file":"ng-particles.js","sources":["../../../src/lib/ng-particles.component.ts","../../../src/lib/ng-particles.module.ts","../../../src/public-api.ts","../../../src/ng-particles.ts"],"sourcesContent":["import { AfterViewInit, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { tsParticles } from 'tsparticles';\nimport type { Container, Main } from 'tsparticles';\nimport { IParticlesProps } from './ng-particles.module';\n\n@Component({\n    selector: 'ng-particles',\n    template: `\n        <div [id]=\"id\"></div> `,\n    styles: [],\n})\nexport class NgParticlesComponent implements AfterViewInit {\n    @Input() options?: IParticlesProps;\n    @Input() url?: string;\n    @Input() id: string;\n    @Output() particlesLoaded: EventEmitter<Container> = new EventEmitter<Container>();\n    @Output() particlesInit: EventEmitter<Main> = new EventEmitter<Main>();\n\n    public ngAfterViewInit(): void {\n        tsParticles.init();\n\n        this.particlesInit.emit(tsParticles);\n\n        const cb = (container?: Container) => {\n            this.particlesLoaded.emit(container);\n        };\n\n        if (this.url) {\n            tsParticles.loadJSON(this.id, this.url).then(cb);\n        } else if (this.options) {\n            tsParticles.load(this.id, this.options).then(cb);\n        } else {\n            console.error('You must specify options or url to load tsParticles');\n        }\n    }\n}\n\n@Component({\n    selector: 'Particles',\n    template: `\n        <div [id]=\"id\"></div> `,\n    styles: []\n})\nexport class ParticlesComponent extends NgParticlesComponent {\n    @Input() options?: IParticlesProps;\n    @Input() url?: string;\n    @Input() id: string;\n    @Output() particlesLoaded: EventEmitter<Container> = new EventEmitter<Container>();\n    @Output() particlesInit: EventEmitter<Main> = new EventEmitter<Main>();\n}\n","import { NgModule } from '@angular/core';\nimport { NgParticlesComponent, ParticlesComponent } from './ng-particles.component';\nimport type { ISourceOptions } from 'tsparticles';\n\n@NgModule({\n    declarations: [NgParticlesComponent, ParticlesComponent],\n    imports: [],\n    exports: [NgParticlesComponent, ParticlesComponent]\n})\nexport class NgParticlesModule {\n}\n\nexport * from 'tsparticles';\n\nexport type IParticlesProps = ISourceOptions;\nexport type IParticlesParams = IParticlesProps;\n","/*\n * Public API Surface of ng-particles\n */\n\nexport * from './lib/ng-particles.component';\nexport * from './lib/ng-particles.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;MAWa,oBAAoB;IANjC;QAUc,oBAAe,GAA4B,IAAI,YAAY,EAAa,CAAC;QACzE,kBAAa,GAAuB,IAAI,YAAY,EAAQ,CAAC;KAmB1E;IAjBU,eAAe;QAClB,WAAW,CAAC,IAAI,EAAE,CAAC;QAEnB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAErC,MAAM,EAAE,GAAG,CAAC,SAAqB;YAC7B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACxC,CAAC;QAEF,IAAI,IAAI,CAAC,GAAG,EAAE;YACV,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACpD;aAAM,IAAI,IAAI,CAAC,OAAO,EAAE;YACrB,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACpD;aAAM;YACH,OAAO,CAAC,KAAK,CAAC,qDAAqD,CAAC,CAAC;SACxE;KACJ;;;YA7BJ,SAAS,SAAC;gBACP,QAAQ,EAAE,cAAc;gBACxB,QAAQ,EAAE;+BACiB;aAE9B;;;sBAEI,KAAK;kBACL,KAAK;iBACL,KAAK;8BACL,MAAM;4BACN,MAAM;;MA2BE,kBAAmB,SAAQ,oBAAoB;IAN5D;;QAUc,oBAAe,GAA4B,IAAI,YAAY,EAAa,CAAC;QACzE,kBAAa,GAAuB,IAAI,YAAY,EAAQ,CAAC;KAC1E;;;YAZA,SAAS,SAAC;gBACP,QAAQ,EAAE,WAAW;gBACrB,QAAQ,EAAE;+BACiB;aAE9B;;;sBAEI,KAAK;kBACL,KAAK;iBACL,KAAK;8BACL,MAAM;4BACN,MAAM;;;MCvCE,iBAAiB;;;YAL7B,QAAQ,SAAC;gBACN,YAAY,EAAE,CAAC,oBAAoB,EAAE,kBAAkB,CAAC;gBACxD,OAAO,EAAE,EAAE;gBACX,OAAO,EAAE,CAAC,oBAAoB,EAAE,kBAAkB,CAAC;aACtD;;;ACRD;;;;ACAA;;;;;;"}