{"version":3,"sources":["node-fetch (ignored)","./src/app/congratulations/congratulations.component.ts","./src/app/congratulations/congratulations.component.html","util (ignored)","crypto (ignored)","string_decoder (ignored)","fs (ignored)","./src/environments/environment.ts","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/dialog-tutorial/dialog-tutorial.component.ts","./src/app/dialog-tutorial/dialog-tutorial.component.html","./src/app/app.module.ts","./src/app/stretchings/stretchings.component.ts","./src/app/stretchings/stretchings.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/yoga/yoga.component.ts","./src/app/yoga/yoga.component.html","./src/app/utilities.js","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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CA;AACA;AACA;;AAEA,CAAQ;AACR,CAAQ;AACR,4CAA4C,0BAA0B;AACtE,0DAA0D;;AAE1D;AACA;AACA;;AAEA;AACA;AACA;;AAEA,CAAQ;AACR;AACA;;AAEA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAQ;AACR;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA,mBAAmB,KAAK;AACxB;AACA;;AAEA,CAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAQ;AACR;AACA,OAAO,+EAA4B;;AAEnC;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,CAAQ;;AAER,kBAAkB,sBAAsB;AACxC;;AAEA;AACA;AACA;;AAEA,YAAY,KAAK;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAQ;AACR,uBAAuB,yEAAsB;;AAE7C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAQ;AACR;AACA;;AAEA;;AAEA,kBAAkB,oBAAoB;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,CAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAQ;AACR;AACA;AACA,0CAA0C,uDAAS;;AAEnD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,K;;;;;;;;;;;;ACvOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACQ;AACT;AACqB;AACtB;AACiC;;;AAEtF,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE;IAChD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,uFAAoB,EAAE;IACxD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,mGAAwB,EAAC;IAC/D,EAAE,IAAI,EAAC,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAC;CACvD,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACnBuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main-es2015.js","sourcesContent":["/* (ignored) */","import { Component, OnInit } from '@angular/core';\nimport { Container, Main } from 'ng-particles';\n\n@Component({\n  selector: 'app-congratulations',\n  templateUrl: './congratulations.component.html',\n  styleUrls: ['./congratulations.component.scss']\n})\nexport class CongratulationsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  id = \"tsparticles\";\n    \n  /* Starting from 1.19.0 you can use a remote url (AJAX request) to a JSON with the configuration */\n  particlesUrl = \"http://foo.bar/particles.json\";\n  \n  /* or the classic JavaScript object */\n  particlesOptions = {\n      background: {\n          color: {\n              value: \"#000000\"\n          }\n      },\n      fpsLimit: 60,\n      interactivity: {\n          detectsOn: \"canvas\",\n          events: {\n              onClick: {\n                  enable: true,\n                  mode: \"push\"\n              },\n              onHover: {\n                  enable: true,\n                  mode: \"repulse\"\n              },\n              resize: true\n          },\n          modes: {\n              bubble: {\n                  distance: 400,\n                  duration: 2,\n                  opacity: 0.8,\n                  size: 40\n              },\n              push: {\n                  quantity: 4\n              },\n              repulse: {\n                  distance: 200,\n                  duration: 0.4\n              }\n          }\n      },\n      particles: {\n          color: {\n              value: \"#ffffff\"\n          },\n          links: {\n              color: \"#ffffff\",\n              distance: 150,\n              enable: true,\n              opacity: 0.5,\n              width: 1\n          },\n          collisions: {\n              enable: true\n          },\n          move: {\n              direction: \"none\",\n              enable: true,\n              outMode: \"bounce\",\n              random: false,\n              speed: 2,\n              straight: false\n          },\n          number: {\n              density: {\n                  enable: true,\n                  value_area: 700\n              },\n              value: 80\n          },\n          opacity: {\n              value: 0.5\n          },\n          shape: {\n              type: \"circle\"\n          },\n          size: {\n              random: true,\n              value: 5\n          }\n      },\n      detectRetina: true\n  };\n\n  particlesLoaded(container: Container): void {\n      console.log(container);\n  }\n  \n  particlesInit(main: Main): void {\n      console.log(main);\n      \n      // Starting from 1.19.0 you can add custom presets or shape here, using the current tsParticles instance (main)\n  }\n\n}\n","<ng-particles id=\"tsparticles\" [options]=\"particlesOptions\" (particlesLoaded)=\"particlesLoaded($event)\" (particlesInit)=\"particlesInit($event)\"></ng-particles>\n\n<div class=\"container\">\n    <button mat-fab color=\"warn\" aria-label=\"Example icon button with a home icon\" class=\"button\" routerLink=\"/menu\">\n        <mat-icon>home</mat-icon>\n    </button>\n    \n    <p class=\"tittle\">¡Felicidades!</p>\n    <p class=\"tittle\">Has sudado la gota gorda.</p>\n    <br>\n    <br>\n    <img src=\"../assets/img/medal.svg\" alt=\"Medal\" class=\"image_tittle\">\n</div>\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"left\">\n        <p class=\"tittle\">Ya está aquí el futuro de la salud. Y de la IA.</p>\n        <p class=\"description\"><b>Una nueva experiencia de ejercicio impulsada por la Inteligencia Articial.</b>\n                                   Descubre una forma revolucionaria de mantenerte en forma. Y de mejorar tu técnica.\n                                   Por si fuera poco, respira y despeja tu cabeza con la sección yoga.\n                                   La IA avanza. Y tú con ella.</p>\n        <button mat-raised-button color=\"primary\" class=\"button\" routerLink=\"/menu\">Empieza</button>\n    </div>\n    <div class=\"right\">\n        <div class=\"heart\"></div>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'tfjs-posenetClassifier';\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogTutorialComponent } from '../dialog-tutorial/dialog-tutorial.component';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n\n    // El popup solo se muestra una única vez\n    if(localStorage.getItem('popState') != 'shown'){\n      this.dialog.open(DialogTutorialComponent);\n      localStorage.setItem('popState','shown')\n    }\n    \n  }\n  \n}\n","<app-header></app-header>\n\n<div class=\"container\">\n    <div class=\"left\">\n        <mat-card class=\"example-card\">\n            <mat-card-header>\n              <mat-card-title>Estiramientos</mat-card-title>\n              <mat-card-subtitle>Alivia la tensión del día.</mat-card-subtitle>\n            </mat-card-header>\n            <img mat-card-image src=\"../../assets/img/stretchings.jpg\" alt=\"Photo of a woman stretching\">\n            <mat-card-content>\n              <p>\n                Mejora tu flexibilidad y la calidad de tus futuros entrenamientos. Si los músculos están relajados, tendrás una mejor calidad de vida. Y dormirás mejor. ¿Preparado para mejorar? La IA te ayudará.\n              </p>\n            </mat-card-content>\n            <mat-card-actions>\n                <button mat-raised-button color=\"primary\" class=\"button\" routerLink=\"/stretchings\">Comenzar sesión</button>\n            </mat-card-actions>\n          </mat-card>  \n    </div>\n    \n    <div class=\"right\">\n        <mat-card class=\"example-card\">\n            <mat-card-header>\n              <mat-card-title>Yoga</mat-card-title>\n              <mat-card-subtitle>Secuencias clásicas. Para cuerpo y mente.</mat-card-subtitle>\n            </mat-card-header>\n            <img mat-card-image src=\"../../assets/img/yoga.jpg\" alt=\"Photo of a Shiba Inu\">\n            <mat-card-content>\n              <p>\n                Práctica tu técnica a través de secuencias clásicas de yoga gracias al potente motor neuronal que te ayudará a mejorar. ¿Preparado? Respira. Calma tu mente. Y dale al botón de comenzar.              </p>\n            </mat-card-content>\n            <mat-card-actions>\n                <button mat-raised-button color=\"primary\" class=\"button\" routerLink=\"/yoga\">Comenzar sesión</button>\n            </mat-card-actions>\n          </mat-card>\n    </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dialog-tutorial',\n  templateUrl: './dialog-tutorial.component.html',\n  styleUrls: ['./dialog-tutorial.component.scss']\n})\nexport class DialogTutorialComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 mat-dialog-title class=\"tittle\"><i>¿Cómo usar las sesiones guiadas?</i></h2>\n<mat-dialog-content class=\"mat-typography\">\n  <h2 class=\"subtittle\"><i>Paso 1:</i> Permite el acceso a tu webcam</h2>\n  <img src=\"../assets/img/webcam.svg\" alt=\"Webcam\" class=\"image_tittle\">\n  <img src=\"../assets/img/eyes.svg\" alt=\"Eyes\" class=\"image_tittle\">\n  <p>Necesitamos que nos des acceso a la cámara. Así nuestra inteligencia artificial podrá verte y decirte lo increíble que eres haciendo deporte. ¡Por cierto! Puedes estar tranquilo. Nadie va a espiarte. De hecho las imágenes nunca salen de tu ordenador. ¡La privacidad es un derecho!</p>\n\n  <h2 class=\"subtittle\"><i>Paso 2:</i> Realiza las poses durante el tiempo establecido</h2>\n  <img src=\"../assets/img/stretching-exercises.svg\" alt=\"Exercices\" class=\"image_tittle\">\n  <img src=\"../assets/img/clock.svg\" alt=\"Clock\" class=\"image_tittle\">\n  <p>A la derecha de la pantalla verás la pose y el tiempo que debes mantenerla. Si dejas de mantenerla el reloj vuelve al valor inicial. No todo iba a ser fácil. ¡A por todas!</p>\n\n  <h2 class=\"subtittle\"><i>Paso 3:</i> Diviertete y se la mejor versión de tí</h2>\n  <img src=\"../assets/img/heart.svg\" alt=\"Heart\" class=\"image_tittle\">\n  <img src=\"../assets/img/brain.svg\" alt=\"Brain\" class=\"image_tittle\">\n  <p>La tecnología se supera. Ahora es tu turno. Demuestra lo que vales. Pero sobretodo diviertete, no hay mejor manera de mantenerse motivado. Recuerda, la mente y el cuerpo son uno. \"Mens sana in corpore sano.\"\n  </p>\n\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-raised-button mat-dialog-close color=\"warn\" class=\"button\">Entendido</button>\n</mat-dialog-actions>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StretchingsComponent } from './stretchings/stretchings.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatButtonModule} from '@angular/material/button';\nimport { MatCardModule} from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NgParticlesModule } from \"ng-particles\";\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { HeaderComponent } from './header/header.component';\nimport { YogaComponent } from './yoga/yoga.component';\nimport { DialogTutorialComponent } from './dialog-tutorial/dialog-tutorial.component';\nimport { CongratulationsComponent } from './congratulations/congratulations.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StretchingsComponent,\n    WelcomeComponent,\n    MenuComponent,\n    HeaderComponent,\n    YogaComponent,\n    DialogTutorialComponent,\n    CongratulationsComponent\n  ],\n  entryComponents: [DialogTutorialComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    NgParticlesModule,\n    MatSliderModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n    MatCardModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { drawKeypoints, drawSkeleton } from  \"../utilities\";\nimport { Prediction } from '../prediction';\nimport { Router } from '@angular/router';\nimport * as posenet from '@tensorflow-models/posenet';\nimport * as tf from '@tensorflow/tfjs';\n\n  @Component({\n    selector: 'app-stretchings',\n    templateUrl: './stretchings.component.html',\n    styleUrls: ['./stretchings.component.scss']\n  })\n\n  export class StretchingsComponent implements OnInit {\n    \n    // DATA BINDING VARIABLES\n    progress_value_exercise = 0;\n    progress_value_session = 0;\n    url_image_root = \"../../assets/img/stretchings/\";\n    url_image = \"../../assets/img/stretchings/y.svg\";\n    text = \"Forma de Y\";\n\n    //VARIBLES DE CONTROL\n    poses = [\"y\", \"right_dorsal\", \"left_dorsal\", \"left_hip\", \"right_hip\"]; // Array con las poses de la sesion\n    //poses = [\"y\", \"right_dorsal\"];\n    text_poses = [\"Forma de Y\", \"Dorsal derecho\", \"Dorsal izquierdo\", \"Cadera izquierda\", \"Cadera derecha\"]; // Array con los textos de la interfaz\n    current_pose; // Pose actual que se esta considerando\n    current_pose_aux; // Indice de la pose actual en al array de poses\n    pose_detected; // Pose detectada por el modelo\n    model_started; // Indica si se ha cargado ya el modelo\n    mistakes;  // Numero de fallos. El programa tiene tolerancia a fallos. No hace falta mantener la postura perfecta los 10 segundos\n    max_mistakes = 10; // Numero maximo de fallos que se permiten\n\n    // VARIABLES GENERALES\n    @ViewChild('video') video: ElementRef;\n    @ViewChild('canvasEl') canvasEl: ElementRef;\n    predictions: Prediction[];\n    localstream: any;\n    model: any;\n    context: CanvasRenderingContext2D;\n    idInterval: any; // Id bucle de ejercicios\n    idTimerProgress: any; // Id temporizador ejercicio\n\n    constructor(private router: Router) { } \n\n    // NG_ON_INIT\n    async ngOnInit() {\n\n      // El modelo aun no se encuentra cargado\n      this.model_started = false;\n      this.mistakes = 0;\n\n      // Se comienza por la primera pose\n      this.current_pose_aux = 0;\n      this.current_pose = this.poses[this.current_pose_aux];\n\n      // Variables del codigo\n      let debug_level = 2; // Nivel de debuggeo necesario\n      \n      // Variables del modelo propio para normalizar\n      let max_python = 637.5225709626529;\n      let min_python = 1.3238226404056377;\n      \n      // Se carga el modelo posenet\n      console.log('Loading posenet model...');\n      this.model = await posenet.load({\n        architecture: 'MobileNetV1',\n        outputStride: 16,\n        inputResolution: { width: 640, height: 480 },\n        multiplier: 0.75\n      });\n      console.log('Posenet. Sucessfully loaded model');\n      console.log('Using TensorFlow backend: ', tf.getBackend());\n      \n      // Se carga el modelo de deteccion de poses desde un repositorio remoto de github                                                                       \n      const myModel = await tf.loadLayersModel('https://raw.githubusercontent.com/SrLozano/posenetClassifier-kerasModel/main/model.json', {weightPathPrefix: 'https://raw.githubusercontent.com/SrLozano/posenetClassifier-kerasModel/main/'});\n      console.log('My model sucessfully loaded');\n\n      // Codigo bucle que se ejecuta en cada frame de la webcam\n      this.idInterval = setInterval(async () => {\n        // Se realiza la prediccion basada en posenet\n        this.predictions = await this.model.estimateSinglePose(this.video.nativeElement, {\n          flipHorizontal: true\n        });\n        \n        var canvas = document.getElementById('mycanvas');\n        var width = canvas.getBoundingClientRect().width;\n        var height = canvas.getBoundingClientRect().height;\n\n        this.context = (this.canvasEl.nativeElement as HTMLCanvasElement).getContext('2d');\n\n        // Se transforman los datos en un formato adecuado para el segundo modelo\n        var data_to_predict = this.transformData (this.predictions, max_python, min_python);\n        \n        // Se realiza la prediccion\n        let output3 = await myModel.predict(data_to_predict) as tf.Tensor;\n        const prediction = output3.dataSync(); // Aqui se obtiene el resultado\n\n        this.pose_detected = this.decodePrediction(prediction);\n\n        // Una vez el modelo ha arrancado se procede a comenzar la cuenta atras\n        if(!this.model_started){\n          this.startCountdown();\n          this.model_started = true;\n          console.log(\"Countdown started\");\n        }\n\n        // Debug\n        if (debug_level >= 2){\n          console.log(\"Max value is:\" + Math.max.apply(null, prediction));\n          console.log(\"Index of max value is: \" + prediction.indexOf(Math.max.apply(null, prediction)))\n          console.log(\"Pose is: \" + this.pose_detected);\n        }\n\n        // Se limpia la anterior pose para evitar sobrescribir\n        this.context.clearRect(0, 0, width, height); //Esos son los pixeles a limpiar\n        \n        // Se dibuja de nuevo el esqueleto\n        this.drawCanvas(this.predictions, this.canvasEl);\n\n        // Se espera al siguiente frame\n        await tf.nextFrame();\n      }, 100);\n    }\n\n    // FUNCIONES AUXILIARES\n\n    // Se solicita permiso para acceder a la webcam cuando se ha cargado el componente\n    async ngAfterViewInit() {\n      const vid = this.video.nativeElement;\n\n      if (navigator.mediaDevices.getUserMedia) {\n        navigator.mediaDevices.getUserMedia({ video: true })\n          .then((stream) => {\n            this.localstream = stream;\n            vid.srcObject = stream;\n          })\n          .catch((err0r) => {\n            console.log('Something went wrong!');\n          });\n      }\n    }\n\n    // Se dibujan los puntos claves y el esqueleto sobre el canvas\n    drawCanvas = (pose, canvas) => {\n      this.context = (canvas.nativeElement as HTMLCanvasElement).getContext('2d');\n      drawKeypoints(pose[\"keypoints\"], 0.5, this.context);\n      drawSkeleton(pose[\"keypoints\"], 0.5, this.context);\n    };\n\n    // Esta funcion trasnforma las predicciones en un formato adecuado al segundo clasificador\n    transformData = (predictions, max_python, min_python) => {\n      var inputs = [];\n      \n      // Almacenamos las predicciones en un array plano\n      for (let i = 0; i < predictions.keypoints.length; i++){\n        let x = predictions.keypoints[i].position.x;\n        let y = predictions.keypoints[i].position.y;\n        inputs.push(x);\n        inputs.push(y);\n      }\n\n      // Normalizamos los valores\n      var max = max_python;\n      var min = min_python;\n\n      for (let i = 0; i < inputs.length; i++){\n        inputs[i] = (inputs[i] - min)/(max - min);\n      }\n\n      var data_transformed = tf.tensor([inputs]);\n\n      return data_transformed;\n    };\n\n    // Esta funcion decodifica las predicciones del modelo en un string\n    decodePrediction = (prediction) => {\n      \n      let index = prediction.indexOf(Math.max.apply(null, prediction));\n      let var_return = \"Null\";\n\n      if (index == 0){\n        var_return = \"left_dorsal\" \n      } else if (index == 1){\n        var_return = \"left_hip\" \n      } else if (index == 2){\n        var_return = \"lotus\" \n      } else if (index == 3){\n        var_return = \"mountain\" \n      } else if (index == 4){\n        var_return = \"right_dorsal\" \n      } else if (index == 5){\n        var_return = \"right_hip\" \n      } else if (index == 6){\n        var_return = \"sun\" \n      } else if (index == 7){\n        var_return = \"tree\" \n      } else if (index == 8){\n        var_return = \"triangle\" \n      } else if (index == 9){\n        var_return = \"y\" \n      } \n\n      return var_return\n    };\n\n    // Esta funcion comienza la cuenta atras de cada una de las poses\n    startCountdown = () => {\n      this.idTimerProgress = setInterval(() => {\n        this.progress_value_exercise = this.progress_value_exercise + 1;\n\n        // Si la pose detectada se corresponde con la que se debe hacer el numero de fallos vuelve a 0\n        if(this.pose_detected == this.current_pose){\n          this.mistakes = 0;\n        } else { // En caso contrario tenemos un fallo\n          this.mistakes = this.mistakes + 1;\n        }\n\n        // Si se realiza el numero de fallos maximo, el reloj vuelve al 0\n        if(this.mistakes >= this.max_mistakes){\n          this.progress_value_exercise = 0;\n        }\n\n        if(this.progress_value_exercise == 100) { // Se para el temporizador una vez se completa la pose y se pasa a la siguiente\n          console.log(\"Pose completed\");\n          this.progress_value_exercise = 0;\n          this.mistakes = 0;\n          this.current_pose_aux = this.current_pose_aux + 1;\n          this.progress_value_session = this.progress_value_session + 20\n\n          if(this.current_pose_aux == this.poses.length){\n            setTimeout(() => { this.closeWebcam('end'); }, 100);\n          }\n          this.text = this.text_poses[this.current_pose_aux];\n          this.current_pose = this.poses[this.current_pose_aux];\n          this.url_image = this.url_image_root + this.current_pose + '.svg';\n          //clearInterval(this.idTimerProgress); \n        }\n      }, 100);\n    }\n\n    // Se redirige a la página principal apagando antes la webcam \n    closeWebcam(destiny){\n      clearInterval(this.idInterval); // Se para la prediccion\n      clearInterval(this.idTimerProgress); // Se para el temporizador\n      const vid = this.video.nativeElement;\n      vid.pause();\n      vid.src = \"\";\n      this.localstream.getTracks()[0].stop();\n      if(destiny == 'end'){\n        this.router.navigate(['/congratulations']);\n      } else {\n        this.router.navigate(['/menu']);\n      }\n    }\n  }\n","<div class=\"container\">\n    <button mat-fab color=\"warn\" aria-label=\"Example icon button with a home icon\" class=\"button\" (click)=\"closeWebcam('menu')\">\n        <mat-icon>home</mat-icon>\n    </button>\n    <mat-progress-spinner class=\"progress\"\n        color=\"primary\"\n        mode=\"determinate\"\n        [value]=\"progress_value_session\">\n    </mat-progress-spinner>\n\n    <div class=\"left\">\n        <canvas class= \"canvas\" #canvasEl id=\"mycanvas\" width=640 height=480></canvas> \n        <video autoplay playsinline muted class=\"webcam\" width=\"640\" height=\"480\" #video></video> \n    </div>\n    <div class=\"right\">\n        <p class=\"tittle\">{{text}}</p>\n        <div class=\"right_left\">\n            <img [src]=\"url_image\" alt=\"Exercise\" class=\"image-exercise\">\n        </div>\n        <div class=\"right_right\">\n            <mat-progress-spinner class=\"little_progress\"\n            color=\"warn\"\n            mode=\"determinate\"\n            [value]=\"progress_value_exercise\"\n            [diameter]=\"200\">\n            </mat-progress-spinner>\n        </div>\n    </div>\n   \n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogTutorialComponent } from '../dialog-tutorial/dialog-tutorial.component';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  openDialog() {\n    this.dialog.open(DialogTutorialComponent);\n  }\n\n}\n","<nav>\n    <div class=\"container\">\n        <div class=\"header-tittle\">\n            \n            <a routerLink=\"/welcome\" class=\"header-tittle-item\"><img src=\"../assets/img/heart.svg\" alt=\"Home\"></a>\n        </div>\n        <div class=\"header\">\n            <ul>\n                <li class=\"link\"><a (click)=\"openDialog()\">Tutorial</a></li>\n                <li class=\"link\"><a routerLink=\"/stretchings\">Estiramientos</a></li>\n                <li class=\"link\"><a routerLink=\"/yoga\">Yoga</a></li>\n            </ul>\n\n        </div>\n    </div>\n</nav>\n\n<!-- Heart image by: Icons made by Pixel perfect from https://www.flaticon.com -->","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { drawKeypoints, drawSkeleton } from  \"../utilities\";\nimport { Prediction } from '../prediction';\nimport { Router } from '@angular/router';\nimport * as posenet from '@tensorflow-models/posenet';\nimport * as tf from '@tensorflow/tfjs';\n\n@Component({\n  selector: 'app-yoga',\n  templateUrl: './yoga.component.html',\n  styleUrls: ['./yoga.component.scss']\n})\nexport class YogaComponent implements OnInit {\n\n  // DATA BINDING VARIABLES\n  progress_value_exercise = 0;\n  progress_value_session = 0;\n  url_image_root = \"../../assets/img/yoga/\";\n  url_image = \"../../assets/img/yoga/mountain.svg\";\n  text = \"La montaña\";\n\n  //VARIBLES DE CONTROL\n  poses = [\"mountain\", \"sun\", \"tree\", \"triangle\", \"lotus\"]; // Array con las poses de la sesion\n  //poses = [\"mountain\", \"sun\"];\n  text_poses = [\"La montaña\", \"El sol\", \"El árbol\", \"El triángulo\", \"El loto\"]; // Array con los textos de la interfaz\n  current_pose; // Pose actual que se esta considerando\n  current_pose_aux; // Indice de la pose actual en al array de poses\n  pose_detected; // Pose detectada por el modelo\n  model_started; // Indica si se ha cargado ya el modelo\n  mistakes;  // Numero de fallos. El programa tiene tolerancia a fallos. No hace falta mantener la postura perfecta los 10 segundos\n  max_mistakes = 10; // Numero maximo de fallos que se permiten\n\n  // VARIABLES GENERALES\n  @ViewChild('video') video: ElementRef;\n  @ViewChild('canvasEl') canvasEl: ElementRef;\n  predictions: Prediction[];\n  localstream: any;\n  model: any;\n  context: CanvasRenderingContext2D;\n  idInterval: any; // Id bucle de ejercicios\n  idTimerProgress: any; // Id temporizador ejercicio\n\n  constructor(private router: Router) { } \n\n  // NG_ON_INIT\n  async ngOnInit() {\n\n    // El modelo aun no se encuentra cargado\n    this.model_started = false;\n    this.mistakes = 0;\n\n    // Se comienza por la primera pose\n    this.current_pose_aux = 0;\n    this.current_pose = this.poses[this.current_pose_aux];\n\n    // Variables del codigo\n    let debug_level = 2; // Nivel de debuggeo necesario\n    \n    // Variables del modelo propio para normalizar\n    let max_python = 637.5225709626529;\n    let min_python = 1.3238226404056377;\n    \n    // Se carga el modelo posenet\n    console.log('Loading posenet model...');\n    this.model = await posenet.load({\n      architecture: 'MobileNetV1',\n      outputStride: 16,\n      inputResolution: { width: 640, height: 480 },\n      multiplier: 0.75\n    });\n    console.log('Posenet. Sucessfully loaded model');\n    console.log('Using TensorFlow backend: ', tf.getBackend());\n    \n    // Se carga el modelo de deteccion de poses desde un repositorio remoto de github                                                                       \n    const myModel = await tf.loadLayersModel('https://raw.githubusercontent.com/SrLozano/posenetClassifier-kerasModel/main/model.json', {weightPathPrefix: 'https://raw.githubusercontent.com/SrLozano/posenetClassifier-kerasModel/main/'});\n    console.log('My model sucessfully loaded');\n\n    // Codigo bucle que se ejecuta en cada frame de la webcam\n    this.idInterval = setInterval(async () => {\n      // Se realiza la prediccion basada en posenet\n      this.predictions = await this.model.estimateSinglePose(this.video.nativeElement, {\n        flipHorizontal: true\n      });\n      \n      var canvas = document.getElementById('mycanvas');\n      var width = canvas.getBoundingClientRect().width;\n      var height = canvas.getBoundingClientRect().height;\n\n      this.context = (this.canvasEl.nativeElement as HTMLCanvasElement).getContext('2d');\n\n      // Se transforman los datos en un formato adecuado para el segundo modelo\n      var data_to_predict = this.transformData (this.predictions, max_python, min_python);\n      \n      // Se realiza la prediccion\n      let output3 = await myModel.predict(data_to_predict) as tf.Tensor;\n      const prediction = output3.dataSync(); // Aqui se obtiene el resultado\n\n      this.pose_detected = this.decodePrediction(prediction);\n\n      // Una vez el modelo ha arrancado se procede a comenzar la cuenta atras\n      if(!this.model_started){\n        this.startCountdown();\n        this.model_started = true;\n        console.log(\"Countdown started\");\n      }\n\n      // Debug\n      if (debug_level >= 2){\n        console.log(\"Max value is:\" + Math.max.apply(null, prediction));\n        console.log(\"Index of max value is: \" + prediction.indexOf(Math.max.apply(null, prediction)))\n        console.log(\"Pose is: \" + this.pose_detected);\n      }\n\n      // Se limpia la anterior pose para evitar sobrescribir\n      this.context.clearRect(0, 0, width, height); //Esos son los pixeles a limpiar\n      \n      // Se dibuja de nuevo el esqueleto\n      this.drawCanvas(this.predictions, this.canvasEl);\n\n      // Se espera al siguiente frame\n      await tf.nextFrame();\n    }, 100);\n  }\n\n  // FUNCIONES AUXILIARES\n\n  // Se solicita permiso para acceder a la webcam cuando se ha cargado el componente\n  async ngAfterViewInit() {\n    const vid = this.video.nativeElement;\n\n    if (navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices.getUserMedia({ video: true })\n        .then((stream) => {\n          this.localstream = stream;\n          vid.srcObject = stream;\n        })\n        .catch((err0r) => {\n          console.log('Something went wrong!');\n        });\n    }\n  }\n\n  // Se dibujan los puntos claves y el esqueleto sobre el canvas\n  drawCanvas = (pose, canvas) => {\n    this.context = (canvas.nativeElement as HTMLCanvasElement).getContext('2d');\n    drawKeypoints(pose[\"keypoints\"], 0.5, this.context);\n    drawSkeleton(pose[\"keypoints\"], 0.5, this.context);\n  };\n\n  // Esta funcion trasnforma las predicciones en un formato adecuado al segundo clasificador\n  transformData = (predictions, max_python, min_python) => {\n    var inputs = [];\n    \n    // Almacenamos las predicciones en un array plano\n    for (let i = 0; i < predictions.keypoints.length; i++){\n      let x = predictions.keypoints[i].position.x;\n      let y = predictions.keypoints[i].position.y;\n      inputs.push(x);\n      inputs.push(y);\n    }\n\n    // Normalizamos los valores\n    var max = max_python;\n    var min = min_python;\n\n    for (let i = 0; i < inputs.length; i++){\n      inputs[i] = (inputs[i] - min)/(max - min);\n    }\n\n    var data_transformed = tf.tensor([inputs]);\n\n    return data_transformed;\n  };\n\n  // Esta funcion decodifica las predicciones del modelo en un string\n  decodePrediction = (prediction) => {\n    \n    let index = prediction.indexOf(Math.max.apply(null, prediction));\n    let var_return = \"Null\";\n\n    if (index == 0){\n      var_return = \"left_dorsal\" \n    } else if (index == 1){\n      var_return = \"left_hip\" \n    } else if (index == 2){\n      var_return = \"lotus\" \n    } else if (index == 3){\n      var_return = \"mountain\" \n    } else if (index == 4){\n      var_return = \"right_dorsal\" \n    } else if (index == 5){\n      var_return = \"right_hip\" \n    } else if (index == 6){\n      var_return = \"sun\" \n    } else if (index == 7){\n      var_return = \"tree\" \n    } else if (index == 8){\n      var_return = \"triangle\" \n    } else if (index == 9){\n      var_return = \"y\" \n    } \n\n    return var_return\n  };\n\n  // Esta funcion comienza la cuenta atras de cada una de las poses\n  startCountdown = () => {\n    this.idTimerProgress = setInterval(() => {\n      this.progress_value_exercise = this.progress_value_exercise + 1;\n\n      // Si la pose detectada se corresponde con la que se debe hacer el numero de fallos vuelve a 0\n      if(this.pose_detected == this.current_pose){\n        this.mistakes = 0;\n      } else { // En caso contrario tenemos un fallo\n        this.mistakes = this.mistakes + 1;\n      }\n\n      // Si se realiza el numero de fallos maximo, el reloj vuelve al 0\n      if(this.mistakes >= this.max_mistakes){\n        this.progress_value_exercise = 0;\n      }\n\n      if(this.progress_value_exercise == 100) { // Se para el temporizador una vez se completa la pose y se pasa a la siguiente\n        console.log(\"Pose completed\");\n        this.progress_value_exercise = 0;\n        this.mistakes = 0;\n        this.current_pose_aux = this.current_pose_aux + 1;\n        this.progress_value_session = this.progress_value_session + 20\n\n        if(this.current_pose_aux == this.poses.length){\n          setTimeout(() => { this.closeWebcam('end'); }, 100);\n        }\n        this.text = this.text_poses[this.current_pose_aux];\n        this.current_pose = this.poses[this.current_pose_aux];\n        this.url_image = this.url_image_root + this.current_pose + '.svg';\n        //clearInterval(this.idTimerProgress); \n      }\n    }, 100);\n  }\n\n  // Se redirige a la página principal apagando antes la webcam \n  closeWebcam(destiny){\n    clearInterval(this.idInterval); // Se para la prediccion\n    clearInterval(this.idTimerProgress); // Se para el temporizador\n    const vid = this.video.nativeElement;\n    vid.pause();\n    vid.src = \"\";\n    this.localstream.getTracks()[0].stop();\n    if(destiny == 'end'){\n      this.router.navigate(['/congratulations']);\n    } else {\n      this.router.navigate(['/menu']);\n    }\n  }\n}\n","<div class=\"container\">\n    <button mat-fab color=\"warn\" aria-label=\"Example icon button with a home icon\" class=\"button\" (click)=\"closeWebcam('menu')\">\n        <mat-icon>home</mat-icon>\n    </button>\n    <mat-progress-spinner class=\"progress\"\n        color=\"primary\"\n        mode=\"determinate\"\n        [value]=\"progress_value_session\">\n    </mat-progress-spinner>\n\n    <div class=\"left\">\n        <canvas class= \"canvas\" #canvasEl id=\"mycanvas\" width=640 height=480></canvas> \n        <video autoplay playsinline muted class=\"webcam\" width=\"640\" height=\"480\" #video></video> \n    </div>\n    <div class=\"right\">\n        <p class=\"tittle\">{{text}}</p>\n        <div class=\"right_left\">\n            <img [src]=\"url_image\" alt=\"Exercise\" class=\"image-exercise\">\n        </div>\n        <div class=\"right_right\">\n            <mat-progress-spinner class=\"little_progress\"\n            color=\"warn\"\n            mode=\"determinate\"\n            [value]=\"progress_value_exercise\"\n            [diameter]=\"200\">\n            </mat-progress-spinner>\n        </div>\n    </div>\n   \n</div>","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n import * as posenet from '@tensorflow-models/posenet';\n import * as tf from '@tensorflow/tfjs';\n \n const color = 'aqua';\n const boundingBoxColor = 'red';\n const lineWidth = 1;\n const pointThick = 8\n \n export const tryResNetButtonName = 'tryResNetButton';\n export const tryResNetButtonText = '[New] Try ResNet50';\n const tryResNetButtonTextCss = 'width:100%;text-decoration:underline;';\n const tryResNetButtonBackgroundCss = 'background:#e61d5f;';\n \n function isAndroid() {\n   return /Android/i.test(navigator.userAgent);\n }\n \n function isiOS() {\n   return /iPhone|iPad|iPod/i.test(navigator.userAgent);\n }\n \n export function isMobile() {\n   return isAndroid() || isiOS();\n }\n \n function setDatGuiPropertyCss(propertyText, liCssString, spanCssString = '') {\n   var spans = document.getElementsByClassName('property-name');\n   for (var i = 0; i < spans.length; i++) {\n     var text = spans[i].textContent || spans[i].innerText;\n     if (text == propertyText) {\n       spans[i].parentNode.parentNode.style = liCssString;\n       if (spanCssString !== '') {\n         spans[i].style = spanCssString;\n       }\n     }\n   }\n }\n \n export function updateTryResNetButtonDatGuiCss() {\n   setDatGuiPropertyCss(\n       tryResNetButtonText, tryResNetButtonBackgroundCss,\n       tryResNetButtonTextCss);\n }\n \n /**\n  * Toggles between the loading UI and the main canvas UI.\n  */\n export function toggleLoadingUI(\n     showLoadingUI, loadingDivId = 'loading', mainDivId = 'main') {\n   if (showLoadingUI) {\n     document.getElementById(loadingDivId).style.display = 'block';\n     document.getElementById(mainDivId).style.display = 'none';\n   } else {\n     document.getElementById(loadingDivId).style.display = 'none';\n     document.getElementById(mainDivId).style.display = 'block';\n   }\n }\n \n function toTuple({y, x}) {\n   return [y, x];\n }\n \n export function drawPoint(ctx, y, x, r, color) {\n   ctx.beginPath();\n   ctx.arc(x, y, r, 0, 2 * Math.PI);\n   ctx.fillStyle = color;\n   ctx.fill();\n }\n \n /**\n  * Draws a line on a canvas, i.e. a joint\n  */\n export function drawSegment([ay, ax], [by, bx], color, scale, ctx) {\n   ctx.beginPath();\n   ctx.moveTo(ax * scale, ay * scale);\n   ctx.lineTo(bx * scale, by * scale);\n   ctx.lineWidth = lineWidth;\n   ctx.strokeStyle = color;\n   ctx.stroke();\n }\n \n /**\n  * Draws a pose skeleton by looking up all adjacent keypoints/joints\n  */\n export function drawSkeleton(keypoints, minConfidence, ctx, scale = 1) {\n   const adjacentKeyPoints =\n       posenet.getAdjacentKeyPoints(keypoints, minConfidence);\n \n   adjacentKeyPoints.forEach((keypoints) => {\n     drawSegment(\n         toTuple(keypoints[0].position), toTuple(keypoints[1].position), color,\n         scale, ctx);\n   });\n }\n \n /**\n  * Draw pose keypoints onto a canvas\n  */\n export function drawKeypoints(keypoints, minConfidence, ctx, scale = 1) {\n   \n   for (let i = 0; i < keypoints.length; i++) {\n     const keypoint = keypoints[i];\n \n     if (keypoint.score < minConfidence) {\n       continue;\n     }\n \n     const {y, x} = keypoint.position;\n     drawPoint(ctx, y * scale, x * scale, pointThick, color);\n   }\n }\n \n /**\n  * Draw the bounding box of a pose. For example, for a whole person standing\n  * in an image, the bounding box will begin at the nose and extend to one of\n  * ankles\n  */\n export function drawBoundingBox(keypoints, ctx) {\n   const boundingBox = posenet.getBoundingBox(keypoints);\n \n   ctx.rect(\n       boundingBox.minX, boundingBox.minY, boundingBox.maxX - boundingBox.minX,\n       boundingBox.maxY - boundingBox.minY);\n \n   ctx.strokeStyle = boundingBoxColor;\n   ctx.stroke();\n }\n \n /**\n  * Converts an arary of pixel data into an ImageData object\n  */\n export async function renderToCanvas(a, ctx) {\n   const [height, width] = a.shape;\n   const imageData = new ImageData(width, height);\n \n   const data = await a.data();\n \n   for (let i = 0; i < height * width; ++i) {\n     const j = i * 4;\n     const k = i * 3;\n \n     imageData.data[j + 0] = data[k + 0];\n     imageData.data[j + 1] = data[k + 1];\n     imageData.data[j + 2] = data[k + 2];\n     imageData.data[j + 3] = 255;\n   }\n \n   ctx.putImageData(imageData, 0, 0);\n }\n \n /**\n  * Draw an image on a canvas\n  */\n export function renderImageToCanvas(image, size, canvas) {\n   canvas.width = size[0];\n   canvas.height = size[1];\n   const ctx = canvas.getContext('2d');\n \n   ctx.drawImage(image, 0, 0);\n }\n \n /**\n  * Draw heatmap values, one of the model outputs, on to the canvas\n  * Read our blog post for a description of PoseNet's heatmap outputs\n  * https://medium.com/tensorflow/real-time-human-pose-estimation-in-the-browser-with-tensorflow-js-7dd0bc881cd5\n  */\n export function drawHeatMapValues(heatMapValues, outputStride, canvas) {\n   const ctx = canvas.getContext('2d');\n   const radius = 5;\n   const scaledValues = heatMapValues.mul(tf.scalar(outputStride, 'int32'));\n \n   drawPoints(ctx, scaledValues, radius, color);\n }\n \n /**\n  * Used by the drawHeatMapValues method to draw heatmap points on to\n  * the canvas\n  */\n function drawPoints(ctx, points, radius, color) {\n   const data = points.buffer().values;\n \n   for (let i = 0; i < data.length; i += 2) {\n     const pointY = data[i];\n     const pointX = data[i + 1];\n \n     if (pointX !== 0 && pointY !== 0) {\n       ctx.beginPath();\n       ctx.arc(pointX, pointY, radius, 0, 2 * Math.PI);\n       ctx.fillStyle = color;\n       ctx.fill();\n     }\n   }\n }\n \n /**\n  * Draw offset vector values, one of the model outputs, on to the canvas\n  * Read our blog post for a description of PoseNet's offset vector outputs\n  * https://medium.com/tensorflow/real-time-human-pose-estimation-in-the-browser-with-tensorflow-js-7dd0bc881cd5\n  */\n // export function drawOffsetVectors(\n //     heatMapValues, offsets, outputStride, scale = 1, ctx) {\n //   const offsetPoints =\n //       posenet.singlePose.getOffsetPoints(heatMapValues, outputStride, offsets);\n \n //   const heatmapData = heatMapValues.buffer().values;\n //   const offsetPointsData = offsetPoints.buffer().values;\n \n //   for (let i = 0; i < heatmapData.length; i += 2) {\n //     const heatmapY = heatmapData[i] * outputStride;\n //     const heatmapX = heatmapData[i + 1] * outputStride;\n //     const offsetPointY = offsetPointsData[i];\n //     const offsetPointX = offsetPointsData[i + 1];\n \n //     drawSegment(\n //         [heatmapY, heatmapX], [offsetPointY, offsetPointX], color, scale, ctx);\n //   }\n // }","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { StretchingsComponent } from './stretchings/stretchings.component';\nimport { YogaComponent } from './yoga/yoga.component'\nimport { CongratulationsComponent } from './congratulations/congratulations.component'\n\nconst routes: Routes = [  \n  { path: 'welcome', component: WelcomeComponent },\n  { path: 'menu', component: MenuComponent },\n  { path: 'stretchings', component: StretchingsComponent },\n  { path: 'yoga', component: YogaComponent },\n  { path: 'congratulations', component: CongratulationsComponent},\n  { path:'**', pathMatch: 'full', redirectTo: 'welcome'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}