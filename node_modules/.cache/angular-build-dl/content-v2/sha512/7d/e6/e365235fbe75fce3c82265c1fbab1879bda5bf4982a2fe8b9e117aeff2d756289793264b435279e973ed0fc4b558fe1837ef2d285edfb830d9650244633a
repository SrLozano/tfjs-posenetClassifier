{"version":3,"sources":["webpack:///node-fetch (ignored)","webpack:///src/app/congratulations/congratulations.component.ts","webpack:///src/app/congratulations/congratulations.component.html","webpack:///util (ignored)","webpack:///crypto (ignored)","webpack:///string_decoder (ignored)","webpack:///fs (ignored)","webpack:///src/environments/environment.ts","webpack:///src/app/welcome/welcome.component.ts","webpack:///src/app/welcome/welcome.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/menu/menu.component.ts","webpack:///src/app/menu/menu.component.html","webpack:///src/app/dialog-tutorial/dialog-tutorial.component.ts","webpack:///src/app/dialog-tutorial/dialog-tutorial.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/stretchings/stretchings.component.ts","webpack:///src/app/stretchings/stretchings.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/yoga/yoga.component.ts","webpack:///src/app/yoga/yoga.component.html","webpack:///src/app/utilities.js","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["CongratulationsComponent","id","particlesUrl","particlesOptions","background","color","value","fpsLimit","interactivity","detectsOn","events","onClick","enable","mode","onHover","resize","modes","bubble","distance","duration","opacity","size","push","quantity","repulse","particles","links","width","collisions","move","direction","outMode","random","speed","straight","number","density","value_area","shape","type","detectRetina","container","console","log","main","particlesLoaded","particlesInit","environment","production","WelcomeComponent","AppComponent","title","MenuComponent","dialog","localStorage","getItem","open","setItem","DialogTutorialComponent","AppModule","StretchingsComponent","router","progress_value_exercise","progress_value_session","url_image_root","url_image","text","poses","text_poses","max_mistakes","drawCanvas","pose","canvas","context","nativeElement","getContext","transformData","predictions","max_python","min_python","inputs","i","keypoints","length","x","position","y","max","min","data_transformed","decodePrediction","prediction","index","indexOf","Math","apply","var_return","startCountdown","idTimerProgress","setInterval","pose_detected","current_pose","mistakes","current_pose_aux","setTimeout","closeWebcam","model_started","debug_level","architecture","outputStride","inputResolution","height","multiplier","model","weightPathPrefix","myModel","idInterval","estimateSinglePose","video","flipHorizontal","document","getElementById","getBoundingClientRect","canvasEl","data_to_predict","predict","output3","dataSync","clearRect","vid","navigator","mediaDevices","getUserMedia","then","stream","localstream","srcObject","err0r","destiny","clearInterval","pause","src","getTracks","stop","navigate","HeaderComponent","openDialog","YogaComponent","boundingBoxColor","lineWidth","pointThick","tryResNetButtonName","tryResNetButtonText","tryResNetButtonTextCss","tryResNetButtonBackgroundCss","isAndroid","test","userAgent","isiOS","isMobile","setDatGuiPropertyCss","propertyText","liCssString","spanCssString","spans","getElementsByClassName","textContent","innerText","parentNode","style","updateTryResNetButtonDatGuiCss","toggleLoadingUI","showLoadingUI","loadingDivId","mainDivId","display","toTuple","drawPoint","ctx","r","beginPath","arc","PI","fillStyle","fill","drawSegment","scale","ay","ax","by","bx","moveTo","lineTo","strokeStyle","stroke","drawSkeleton","minConfidence","adjacentKeyPoints","forEach","drawKeypoints","keypoint","score","drawBoundingBox","boundingBox","rect","minX","minY","maxX","maxY","renderToCanvas","a","imageData","ImageData","data","j","k","putImageData","renderImageToCanvas","image","drawImage","drawHeatMapValues","heatMapValues","radius","scaledValues","mul","drawPoints","points","buffer","values","pointY","pointX","routes","path","component","pathMatch","redirectTo","AppRoutingModule","forRoot","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["/* (ignored) */","import { Component, OnInit } from '@angular/core';\nimport { Container, Main } from 'ng-particles';\n\n@Component({\n  selector: 'app-congratulations',\n  templateUrl: './congratulations.component.html',\n  styleUrls: ['./congratulations.component.scss']\n})\nexport class CongratulationsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  id = \"tsparticles\";\n    \n  /* Starting from 1.19.0 you can use a remote url (AJAX request) to a JSON with the configuration */\n  particlesUrl = \"http://foo.bar/particles.json\";\n  \n  /* or the classic JavaScript object */\n  particlesOptions = {\n      background: {\n          color: {\n              value: \"#000000\"\n          }\n      },\n      fpsLimit: 60,\n      interactivity: {\n          detectsOn: \"canvas\",\n          events: {\n              onClick: {\n                  enable: true,\n                  mode: \"push\"\n              },\n              onHover: {\n                  enable: true,\n                  mode: \"repulse\"\n              },\n              resize: true\n          },\n          modes: {\n              bubble: {\n                  distance: 400,\n                  duration: 2,\n                  opacity: 0.8,\n                  size: 40\n              },\n              push: {\n                  quantity: 4\n              },\n              repulse: {\n                  distance: 200,\n                  duration: 0.4\n              }\n          }\n      },\n      particles: {\n          color: {\n              value: \"#ffffff\"\n          },\n          links: {\n              color: \"#ffffff\",\n              distance: 150,\n              enable: true,\n              opacity: 0.5,\n              width: 1\n          },\n          collisions: {\n              enable: true\n          },\n          move: {\n              direction: \"none\",\n              enable: true,\n              outMode: \"bounce\",\n              random: false,\n              speed: 2,\n              straight: false\n          },\n          number: {\n              density: {\n                  enable: true,\n                  value_area: 700\n              },\n              value: 80\n          },\n          opacity: {\n              value: 0.5\n          },\n          shape: {\n              type: \"circle\"\n          },\n          size: {\n              random: true,\n              value: 5\n          }\n      },\n      detectRetina: true\n  };\n\n  particlesLoaded(container: Container): void {\n      console.log(container);\n  }\n  \n  particlesInit(main: Main): void {\n      console.log(main);\n      \n      // Starting from 1.19.0 you can add custom presets or shape here, using the current tsParticles instance (main)\n  }\n\n}\n","<ng-particles id=\"tsparticles\" [options]=\"particlesOptions\" (particlesLoaded)=\"particlesLoaded($event)\" (particlesInit)=\"particlesInit($event)\"></ng-particles>\n\n<div class=\"container\">\n    <button mat-fab color=\"warn\" aria-label=\"Example icon button with a home icon\" class=\"button\" routerLink=\"/menu\">\n        <mat-icon>home</mat-icon>\n    </button>\n    \n    <p class=\"tittle\">¡Felicidades!</p>\n    <p class=\"tittle\">Has sudado la gota gorda.</p>\n    <br>\n    <br>\n    <img src=\"../assets/img/medal.svg\" alt=\"Medal\" class=\"image_tittle\">\n</div>\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"left\">\n        <p class=\"tittle\">Ya está aquí el futuro de la salud. Y de la IA.</p>\n        <p class=\"description\"><b>Una nueva experiencia de ejercicio impulsada por la Inteligencia Articial.</b>\n                                   Descubre una forma revolucionaria de mantenerte en forma. Y de mejorar tu técnica.\n                                   Por si fuera poco, respira y despeja tu cabeza con la sección yoga.\n                                   La IA avanza. Y tú con ella.</p>\n        <button mat-raised-button color=\"primary\" class=\"button\" routerLink=\"/menu\">Empieza</button>\n    </div>\n    <div class=\"right\">\n        <div class=\"heart\"></div>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'tfjs-posenetClassifier';\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogTutorialComponent } from '../dialog-tutorial/dialog-tutorial.component';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n\n    // El popup solo se muestra una única vez\n    if(localStorage.getItem('popState') != 'shown'){\n      this.dialog.open(DialogTutorialComponent);\n      localStorage.setItem('popState','shown')\n    }\n    \n  }\n  \n}\n","<app-header></app-header>\n\n<div class=\"container\">\n    <div class=\"left\">\n        <mat-card class=\"example-card\">\n            <mat-card-header>\n              <mat-card-title>Estiramientos</mat-card-title>\n              <mat-card-subtitle>Alivia la tensión del día.</mat-card-subtitle>\n            </mat-card-header>\n            <img mat-card-image src=\"../../assets/img/stretchings.jpg\" alt=\"Photo of a woman stretching\">\n            <mat-card-content>\n              <p>\n                Mejora tu flexibilidad y la calidad de tus futuros entrenamientos. Si los músculos están relajados, tendrás una mejor calidad de vida. Y dormirás mejor. ¿Preparado para mejorar? La IA te ayudará.\n              </p>\n            </mat-card-content>\n            <mat-card-actions>\n                <button mat-raised-button color=\"primary\" class=\"button\" routerLink=\"/stretchings\">Comenzar sesión</button>\n            </mat-card-actions>\n          </mat-card>  \n    </div>\n    \n    <div class=\"right\">\n        <mat-card class=\"example-card\">\n            <mat-card-header>\n              <mat-card-title>Yoga</mat-card-title>\n              <mat-card-subtitle>Secuencias clásicas. Para cuerpo y mente.</mat-card-subtitle>\n            </mat-card-header>\n            <img mat-card-image src=\"../../assets/img/yoga.jpg\" alt=\"Photo of a Shiba Inu\">\n            <mat-card-content>\n              <p>\n                Práctica tu técnica a través de secuencias clásicas de yoga gracias al potente motor neuronal que te ayudará a mejorar. ¿Preparado? Respira. Calma tu mente. Y dale al botón de comenzar.              </p>\n            </mat-card-content>\n            <mat-card-actions>\n                <button mat-raised-button color=\"primary\" class=\"button\" routerLink=\"/yoga\">Comenzar sesión</button>\n            </mat-card-actions>\n          </mat-card>\n    </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dialog-tutorial',\n  templateUrl: './dialog-tutorial.component.html',\n  styleUrls: ['./dialog-tutorial.component.scss']\n})\nexport class DialogTutorialComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 mat-dialog-title class=\"tittle\"><i>¿Cómo usar las sesiones guiadas?</i></h2>\n<mat-dialog-content class=\"mat-typography\">\n  <h2 class=\"subtittle\"><i>Paso 1:</i> Permite el acceso a tu webcam</h2>\n  <img src=\"../assets/img/webcam.svg\" alt=\"Webcam\" class=\"image_tittle\">\n  <img src=\"../assets/img/eyes.svg\" alt=\"Eyes\" class=\"image_tittle\">\n  <p>Necesitamos que nos des acceso a la cámara. Así nuestra inteligencia artificial podrá verte y decirte lo increíble que eres haciendo deporte. ¡Por cierto! Puedes estar tranquilo. Nadie va a espiarte. De hecho las imágenes nunca salen de tu ordenador. ¡La privacidad es un derecho!</p>\n\n  <h2 class=\"subtittle\"><i>Paso 2:</i> Realiza las poses durante el tiempo establecido</h2>\n  <img src=\"../assets/img/stretching-exercises.svg\" alt=\"Exercices\" class=\"image_tittle\">\n  <img src=\"../assets/img/clock.svg\" alt=\"Clock\" class=\"image_tittle\">\n  <p>A la derecha de la pantalla verás la pose y el tiempo que debes mantenerla. Si dejas de mantenerla el reloj vuelve al valor inicial. No todo iba a ser fácil. ¡A por todas!</p>\n\n  <h2 class=\"subtittle\"><i>Paso 3:</i> Diviertete y se la mejor versión de tí</h2>\n  <img src=\"../assets/img/heart.svg\" alt=\"Heart\" class=\"image_tittle\">\n  <img src=\"../assets/img/brain.svg\" alt=\"Brain\" class=\"image_tittle\">\n  <p>La tecnología se supera. Ahora es tu turno. Demuestra lo que vales. Pero sobretodo diviertete, no hay mejor manera de mantenerse motivado. Recuerda, la mente y el cuerpo son uno. \"Mens sana in corpore sano.\"\n  </p>\n\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-raised-button mat-dialog-close color=\"warn\" class=\"button\">Entendido</button>\n</mat-dialog-actions>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StretchingsComponent } from './stretchings/stretchings.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatButtonModule} from '@angular/material/button';\nimport { MatCardModule} from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NgParticlesModule } from \"ng-particles\";\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { HeaderComponent } from './header/header.component';\nimport { YogaComponent } from './yoga/yoga.component';\nimport { DialogTutorialComponent } from './dialog-tutorial/dialog-tutorial.component';\nimport { CongratulationsComponent } from './congratulations/congratulations.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StretchingsComponent,\n    WelcomeComponent,\n    MenuComponent,\n    HeaderComponent,\n    YogaComponent,\n    DialogTutorialComponent,\n    CongratulationsComponent\n  ],\n  entryComponents: [DialogTutorialComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    NgParticlesModule,\n    MatSliderModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n    MatCardModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { drawKeypoints, drawSkeleton } from  \"../utilities\";\nimport { Prediction } from '../prediction';\nimport { Router } from '@angular/router';\nimport * as posenet from '@tensorflow-models/posenet';\nimport * as tf from '@tensorflow/tfjs';\n\n  @Component({\n    selector: 'app-stretchings',\n    templateUrl: './stretchings.component.html',\n    styleUrls: ['./stretchings.component.scss']\n  })\n\n  export class StretchingsComponent implements OnInit {\n    \n    // DATA BINDING VARIABLES\n    progress_value_exercise = 0;\n    progress_value_session = 0;\n    url_image_root = \"../../assets/img/stretchings/\";\n    url_image = \"../../assets/img/stretchings/y.svg\";\n    text = \"Forma de Y\";\n\n    //VARIBLES DE CONTROL\n    poses = [\"y\", \"right_dorsal\", \"left_dorsal\", \"left_hip\", \"right_hip\"]; // Array con las poses de la sesion\n    //poses = [\"y\", \"right_dorsal\"];\n    text_poses = [\"Forma de Y\", \"Dorsal derecho\", \"Dorsal izquierdo\", \"Cadera izquierda\", \"Cadera derecha\"]; // Array con los textos de la interfaz\n    current_pose; // Pose actual que se esta considerando\n    current_pose_aux; // Indice de la pose actual en al array de poses\n    pose_detected; // Pose detectada por el modelo\n    model_started; // Indica si se ha cargado ya el modelo\n    mistakes;  // Numero de fallos. El programa tiene tolerancia a fallos. No hace falta mantener la postura perfecta los 10 segundos\n    max_mistakes = 10; // Numero maximo de fallos que se permiten\n\n    // VARIABLES GENERALES\n    @ViewChild('video') video: ElementRef;\n    @ViewChild('canvasEl') canvasEl: ElementRef;\n    predictions: Prediction[];\n    localstream: any;\n    model: any;\n    context: CanvasRenderingContext2D;\n    idInterval: any; // Id bucle de ejercicios\n    idTimerProgress: any; // Id temporizador ejercicio\n\n    constructor(private router: Router) { } \n\n    // NG_ON_INIT\n    async ngOnInit() {\n\n      // El modelo aun no se encuentra cargado\n      this.model_started = false;\n      this.mistakes = 0;\n\n      // Se comienza por la primera pose\n      this.current_pose_aux = 0;\n      this.current_pose = this.poses[this.current_pose_aux];\n\n      // Variables del codigo\n      let debug_level = 2; // Nivel de debuggeo necesario\n      \n      // Variables del modelo propio para normalizar\n      let max_python = 637.5225709626529;\n      let min_python = 1.3238226404056377;\n      \n      // Se carga el modelo posenet\n      console.log('Loading posenet model...');\n      this.model = await posenet.load({\n        architecture: 'MobileNetV1',\n        outputStride: 16,\n        inputResolution: { width: 640, height: 480 },\n        multiplier: 0.75\n      });\n      console.log('Posenet. Sucessfully loaded model');\n      console.log('Using TensorFlow backend: ', tf.getBackend());\n      \n      // Se carga el modelo de deteccion de poses desde un repositorio remoto de github                                                                       \n      const myModel = await tf.loadLayersModel('https://raw.githubusercontent.com/SrLozano/posenetClassifier-kerasModel/main/model.json', {weightPathPrefix: 'https://raw.githubusercontent.com/SrLozano/posenetClassifier-kerasModel/main/'});\n      console.log('My model sucessfully loaded');\n\n      // Codigo bucle que se ejecuta en cada frame de la webcam\n      this.idInterval = setInterval(async () => {\n        // Se realiza la prediccion basada en posenet\n        this.predictions = await this.model.estimateSinglePose(this.video.nativeElement, {\n          flipHorizontal: true\n        });\n        \n        var canvas = document.getElementById('mycanvas');\n        var width = canvas.getBoundingClientRect().width;\n        var height = canvas.getBoundingClientRect().height;\n\n        this.context = (this.canvasEl.nativeElement as HTMLCanvasElement).getContext('2d');\n\n        // Se transforman los datos en un formato adecuado para el segundo modelo\n        var data_to_predict = this.transformData (this.predictions, max_python, min_python);\n        \n        // Se realiza la prediccion\n        let output3 = await myModel.predict(data_to_predict) as tf.Tensor;\n        const prediction = output3.dataSync(); // Aqui se obtiene el resultado\n\n        this.pose_detected = this.decodePrediction(prediction);\n\n        // Una vez el modelo ha arrancado se procede a comenzar la cuenta atras\n        if(!this.model_started){\n          this.startCountdown();\n          this.model_started = true;\n          console.log(\"Countdown started\");\n        }\n\n        // Debug\n        if (debug_level >= 2){\n          console.log(\"Max value is:\" + Math.max.apply(null, prediction));\n          console.log(\"Index of max value is: \" + prediction.indexOf(Math.max.apply(null, prediction)))\n          console.log(\"Pose is: \" + this.pose_detected);\n        }\n\n        // Se limpia la anterior pose para evitar sobrescribir\n        this.context.clearRect(0, 0, width, height); //Esos son los pixeles a limpiar\n        \n        // Se dibuja de nuevo el esqueleto\n        this.drawCanvas(this.predictions, this.canvasEl);\n\n        // Se espera al siguiente frame\n        await tf.nextFrame();\n      }, 100);\n    }\n\n    // FUNCIONES AUXILIARES\n\n    // Se solicita permiso para acceder a la webcam cuando se ha cargado el componente\n    async ngAfterViewInit() {\n      const vid = this.video.nativeElement;\n\n      if (navigator.mediaDevices.getUserMedia) {\n        navigator.mediaDevices.getUserMedia({ video: true })\n          .then((stream) => {\n            this.localstream = stream;\n            vid.srcObject = stream;\n          })\n          .catch((err0r) => {\n            console.log('Something went wrong!');\n          });\n      }\n    }\n\n    // Se dibujan los puntos claves y el esqueleto sobre el canvas\n    drawCanvas = (pose, canvas) => {\n      this.context = (canvas.nativeElement as HTMLCanvasElement).getContext('2d');\n      drawKeypoints(pose[\"keypoints\"], 0.5, this.context);\n      drawSkeleton(pose[\"keypoints\"], 0.5, this.context);\n    };\n\n    // Esta funcion trasnforma las predicciones en un formato adecuado al segundo clasificador\n    transformData = (predictions, max_python, min_python) => {\n      var inputs = [];\n      \n      // Almacenamos las predicciones en un array plano\n      for (let i = 0; i < predictions.keypoints.length; i++){\n        let x = predictions.keypoints[i].position.x;\n        let y = predictions.keypoints[i].position.y;\n        inputs.push(x);\n        inputs.push(y);\n      }\n\n      // Normalizamos los valores\n      var max = max_python;\n      var min = min_python;\n\n      for (let i = 0; i < inputs.length; i++){\n        inputs[i] = (inputs[i] - min)/(max - min);\n      }\n\n      var data_transformed = tf.tensor([inputs]);\n\n      return data_transformed;\n    };\n\n    // Esta funcion decodifica las predicciones del modelo en un string\n    decodePrediction = (prediction) => {\n      \n      let index = prediction.indexOf(Math.max.apply(null, prediction));\n      let var_return = \"Null\";\n\n      if (index == 0){\n        var_return = \"left_dorsal\" \n      } else if (index == 1){\n        var_return = \"left_hip\" \n      } else if (index == 2){\n        var_return = \"lotus\" \n      } else if (index == 3){\n        var_return = \"mountain\" \n      } else if (index == 4){\n        var_return = \"right_dorsal\" \n      } else if (index == 5){\n        var_return = \"right_hip\" \n      } else if (index == 6){\n        var_return = \"sun\" \n      } else if (index == 7){\n        var_return = \"tree\" \n      } else if (index == 8){\n        var_return = \"triangle\" \n      } else if (index == 9){\n        var_return = \"y\" \n      } \n\n      return var_return\n    };\n\n    // Esta funcion comienza la cuenta atras de cada una de las poses\n    startCountdown = () => {\n      this.idTimerProgress = setInterval(() => {\n        this.progress_value_exercise = this.progress_value_exercise + 1;\n\n        // Si la pose detectada se corresponde con la que se debe hacer el numero de fallos vuelve a 0\n        if(this.pose_detected == this.current_pose){\n          this.mistakes = 0;\n        } else { // En caso contrario tenemos un fallo\n          this.mistakes = this.mistakes + 1;\n        }\n\n        // Si se realiza el numero de fallos maximo, el reloj vuelve al 0\n        if(this.mistakes >= this.max_mistakes){\n          this.progress_value_exercise = 0;\n        }\n\n        if(this.progress_value_exercise == 100) { // Se para el temporizador una vez se completa la pose y se pasa a la siguiente\n          console.log(\"Pose completed\");\n          this.progress_value_exercise = 0;\n          this.mistakes = 0;\n          this.current_pose_aux = this.current_pose_aux + 1;\n          this.progress_value_session = this.progress_value_session + 20\n\n          if(this.current_pose_aux == this.poses.length){\n            setTimeout(() => { this.closeWebcam('end'); }, 100);\n          }\n          this.text = this.text_poses[this.current_pose_aux];\n          this.current_pose = this.poses[this.current_pose_aux];\n          this.url_image = this.url_image_root + this.current_pose + '.svg';\n          //clearInterval(this.idTimerProgress); \n        }\n      }, 100);\n    }\n\n    // Se redirige a la página principal apagando antes la webcam \n    closeWebcam(destiny){\n      clearInterval(this.idInterval); // Se para la prediccion\n      clearInterval(this.idTimerProgress); // Se para el temporizador\n      const vid = this.video.nativeElement;\n      vid.pause();\n      vid.src = \"\";\n      this.localstream.getTracks()[0].stop();\n      if(destiny == 'end'){\n        this.router.navigate(['/congratulations']);\n      } else {\n        this.router.navigate(['/menu']);\n      }\n    }\n  }\n","<div class=\"container\">\n    <button mat-fab color=\"warn\" aria-label=\"Example icon button with a home icon\" class=\"button\" (click)=\"closeWebcam('menu')\">\n        <mat-icon>home</mat-icon>\n    </button>\n    <mat-progress-spinner class=\"progress\"\n        color=\"primary\"\n        mode=\"determinate\"\n        [value]=\"progress_value_session\">\n    </mat-progress-spinner>\n\n    <div class=\"left\">\n        <canvas class= \"canvas\" #canvasEl id=\"mycanvas\" width=640 height=480></canvas> \n        <video autoplay playsinline muted class=\"webcam\" width=\"640\" height=\"480\" #video></video> \n    </div>\n    <div class=\"right\">\n        <p class=\"tittle\">{{text}}</p>\n        <div class=\"right_left\">\n            <img [src]=\"url_image\" alt=\"Exercise\" class=\"image-exercise\">\n        </div>\n        <div class=\"right_right\">\n            <mat-progress-spinner class=\"little_progress\"\n            color=\"warn\"\n            mode=\"determinate\"\n            [value]=\"progress_value_exercise\"\n            [diameter]=\"200\">\n            </mat-progress-spinner>\n        </div>\n    </div>\n   \n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogTutorialComponent } from '../dialog-tutorial/dialog-tutorial.component';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  openDialog() {\n    this.dialog.open(DialogTutorialComponent);\n  }\n\n}\n","<nav>\n    <div class=\"container\">\n        <div class=\"header-tittle\">\n            \n            <a routerLink=\"/welcome\" class=\"header-tittle-item\"><img src=\"../assets/img/heart.svg\" alt=\"Home\"></a>\n        </div>\n        <div class=\"header\">\n            <ul>\n                <li class=\"link\"><a (click)=\"openDialog()\">Tutorial</a></li>\n                <li class=\"link\"><a routerLink=\"/stretchings\">Estiramientos</a></li>\n                <li class=\"link\"><a routerLink=\"/yoga\">Yoga</a></li>\n            </ul>\n\n        </div>\n    </div>\n</nav>\n\n<!-- Heart image by: Icons made by Pixel perfect from https://www.flaticon.com -->","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { drawKeypoints, drawSkeleton } from  \"../utilities\";\nimport { Prediction } from '../prediction';\nimport { Router } from '@angular/router';\nimport * as posenet from '@tensorflow-models/posenet';\nimport * as tf from '@tensorflow/tfjs';\n\n@Component({\n  selector: 'app-yoga',\n  templateUrl: './yoga.component.html',\n  styleUrls: ['./yoga.component.scss']\n})\nexport class YogaComponent implements OnInit {\n\n  // DATA BINDING VARIABLES\n  progress_value_exercise = 0;\n  progress_value_session = 0;\n  url_image_root = \"../../assets/img/yoga/\";\n  url_image = \"../../assets/img/yoga/mountain.svg\";\n  text = \"La montaña\";\n\n  //VARIBLES DE CONTROL\n  poses = [\"mountain\", \"sun\", \"tree\", \"triangle\", \"lotus\"]; // Array con las poses de la sesion\n  //poses = [\"mountain\", \"sun\"];\n  text_poses = [\"La montaña\", \"El sol\", \"El árbol\", \"El triángulo\", \"El loto\"]; // Array con los textos de la interfaz\n  current_pose; // Pose actual que se esta considerando\n  current_pose_aux; // Indice de la pose actual en al array de poses\n  pose_detected; // Pose detectada por el modelo\n  model_started; // Indica si se ha cargado ya el modelo\n  mistakes;  // Numero de fallos. El programa tiene tolerancia a fallos. No hace falta mantener la postura perfecta los 10 segundos\n  max_mistakes = 10; // Numero maximo de fallos que se permiten\n\n  // VARIABLES GENERALES\n  @ViewChild('video') video: ElementRef;\n  @ViewChild('canvasEl') canvasEl: ElementRef;\n  predictions: Prediction[];\n  localstream: any;\n  model: any;\n  context: CanvasRenderingContext2D;\n  idInterval: any; // Id bucle de ejercicios\n  idTimerProgress: any; // Id temporizador ejercicio\n\n  constructor(private router: Router) { } \n\n  // NG_ON_INIT\n  async ngOnInit() {\n\n    // El modelo aun no se encuentra cargado\n    this.model_started = false;\n    this.mistakes = 0;\n\n    // Se comienza por la primera pose\n    this.current_pose_aux = 0;\n    this.current_pose = this.poses[this.current_pose_aux];\n\n    // Variables del codigo\n    let debug_level = 2; // Nivel de debuggeo necesario\n    \n    // Variables del modelo propio para normalizar\n    let max_python = 637.5225709626529;\n    let min_python = 1.3238226404056377;\n    \n    // Se carga el modelo posenet\n    console.log('Loading posenet model...');\n    this.model = await posenet.load({\n      architecture: 'MobileNetV1',\n      outputStride: 16,\n      inputResolution: { width: 640, height: 480 },\n      multiplier: 0.75\n    });\n    console.log('Posenet. Sucessfully loaded model');\n    console.log('Using TensorFlow backend: ', tf.getBackend());\n    \n    // Se carga el modelo de deteccion de poses desde un repositorio remoto de github                                                                       \n    const myModel = await tf.loadLayersModel('https://raw.githubusercontent.com/SrLozano/posenetClassifier-kerasModel/main/model.json', {weightPathPrefix: 'https://raw.githubusercontent.com/SrLozano/posenetClassifier-kerasModel/main/'});\n    console.log('My model sucessfully loaded');\n\n    // Codigo bucle que se ejecuta en cada frame de la webcam\n    this.idInterval = setInterval(async () => {\n      // Se realiza la prediccion basada en posenet\n      this.predictions = await this.model.estimateSinglePose(this.video.nativeElement, {\n        flipHorizontal: true\n      });\n      \n      var canvas = document.getElementById('mycanvas');\n      var width = canvas.getBoundingClientRect().width;\n      var height = canvas.getBoundingClientRect().height;\n\n      this.context = (this.canvasEl.nativeElement as HTMLCanvasElement).getContext('2d');\n\n      // Se transforman los datos en un formato adecuado para el segundo modelo\n      var data_to_predict = this.transformData (this.predictions, max_python, min_python);\n      \n      // Se realiza la prediccion\n      let output3 = await myModel.predict(data_to_predict) as tf.Tensor;\n      const prediction = output3.dataSync(); // Aqui se obtiene el resultado\n\n      this.pose_detected = this.decodePrediction(prediction);\n\n      // Una vez el modelo ha arrancado se procede a comenzar la cuenta atras\n      if(!this.model_started){\n        this.startCountdown();\n        this.model_started = true;\n        console.log(\"Countdown started\");\n      }\n\n      // Debug\n      if (debug_level >= 2){\n        console.log(\"Max value is:\" + Math.max.apply(null, prediction));\n        console.log(\"Index of max value is: \" + prediction.indexOf(Math.max.apply(null, prediction)))\n        console.log(\"Pose is: \" + this.pose_detected);\n      }\n\n      // Se limpia la anterior pose para evitar sobrescribir\n      this.context.clearRect(0, 0, width, height); //Esos son los pixeles a limpiar\n      \n      // Se dibuja de nuevo el esqueleto\n      this.drawCanvas(this.predictions, this.canvasEl);\n\n      // Se espera al siguiente frame\n      await tf.nextFrame();\n    }, 100);\n  }\n\n  // FUNCIONES AUXILIARES\n\n  // Se solicita permiso para acceder a la webcam cuando se ha cargado el componente\n  async ngAfterViewInit() {\n    const vid = this.video.nativeElement;\n\n    if (navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices.getUserMedia({ video: true })\n        .then((stream) => {\n          this.localstream = stream;\n          vid.srcObject = stream;\n        })\n        .catch((err0r) => {\n          console.log('Something went wrong!');\n        });\n    }\n  }\n\n  // Se dibujan los puntos claves y el esqueleto sobre el canvas\n  drawCanvas = (pose, canvas) => {\n    this.context = (canvas.nativeElement as HTMLCanvasElement).getContext('2d');\n    drawKeypoints(pose[\"keypoints\"], 0.5, this.context);\n    drawSkeleton(pose[\"keypoints\"], 0.5, this.context);\n  };\n\n  // Esta funcion trasnforma las predicciones en un formato adecuado al segundo clasificador\n  transformData = (predictions, max_python, min_python) => {\n    var inputs = [];\n    \n    // Almacenamos las predicciones en un array plano\n    for (let i = 0; i < predictions.keypoints.length; i++){\n      let x = predictions.keypoints[i].position.x;\n      let y = predictions.keypoints[i].position.y;\n      inputs.push(x);\n      inputs.push(y);\n    }\n\n    // Normalizamos los valores\n    var max = max_python;\n    var min = min_python;\n\n    for (let i = 0; i < inputs.length; i++){\n      inputs[i] = (inputs[i] - min)/(max - min);\n    }\n\n    var data_transformed = tf.tensor([inputs]);\n\n    return data_transformed;\n  };\n\n  // Esta funcion decodifica las predicciones del modelo en un string\n  decodePrediction = (prediction) => {\n    \n    let index = prediction.indexOf(Math.max.apply(null, prediction));\n    let var_return = \"Null\";\n\n    if (index == 0){\n      var_return = \"left_dorsal\" \n    } else if (index == 1){\n      var_return = \"left_hip\" \n    } else if (index == 2){\n      var_return = \"lotus\" \n    } else if (index == 3){\n      var_return = \"mountain\" \n    } else if (index == 4){\n      var_return = \"right_dorsal\" \n    } else if (index == 5){\n      var_return = \"right_hip\" \n    } else if (index == 6){\n      var_return = \"sun\" \n    } else if (index == 7){\n      var_return = \"tree\" \n    } else if (index == 8){\n      var_return = \"triangle\" \n    } else if (index == 9){\n      var_return = \"y\" \n    } \n\n    return var_return\n  };\n\n  // Esta funcion comienza la cuenta atras de cada una de las poses\n  startCountdown = () => {\n    this.idTimerProgress = setInterval(() => {\n      this.progress_value_exercise = this.progress_value_exercise + 1;\n\n      // Si la pose detectada se corresponde con la que se debe hacer el numero de fallos vuelve a 0\n      if(this.pose_detected == this.current_pose){\n        this.mistakes = 0;\n      } else { // En caso contrario tenemos un fallo\n        this.mistakes = this.mistakes + 1;\n      }\n\n      // Si se realiza el numero de fallos maximo, el reloj vuelve al 0\n      if(this.mistakes >= this.max_mistakes){\n        this.progress_value_exercise = 0;\n      }\n\n      if(this.progress_value_exercise == 100) { // Se para el temporizador una vez se completa la pose y se pasa a la siguiente\n        console.log(\"Pose completed\");\n        this.progress_value_exercise = 0;\n        this.mistakes = 0;\n        this.current_pose_aux = this.current_pose_aux + 1;\n        this.progress_value_session = this.progress_value_session + 20\n\n        if(this.current_pose_aux == this.poses.length){\n          setTimeout(() => { this.closeWebcam('end'); }, 100);\n        }\n        this.text = this.text_poses[this.current_pose_aux];\n        this.current_pose = this.poses[this.current_pose_aux];\n        this.url_image = this.url_image_root + this.current_pose + '.svg';\n        //clearInterval(this.idTimerProgress); \n      }\n    }, 100);\n  }\n\n  // Se redirige a la página principal apagando antes la webcam \n  closeWebcam(destiny){\n    clearInterval(this.idInterval); // Se para la prediccion\n    clearInterval(this.idTimerProgress); // Se para el temporizador\n    const vid = this.video.nativeElement;\n    vid.pause();\n    vid.src = \"\";\n    this.localstream.getTracks()[0].stop();\n    if(destiny == 'end'){\n      this.router.navigate(['/congratulations']);\n    } else {\n      this.router.navigate(['/menu']);\n    }\n  }\n}\n","<div class=\"container\">\n    <button mat-fab color=\"warn\" aria-label=\"Example icon button with a home icon\" class=\"button\" (click)=\"closeWebcam('menu')\">\n        <mat-icon>home</mat-icon>\n    </button>\n    <mat-progress-spinner class=\"progress\"\n        color=\"primary\"\n        mode=\"determinate\"\n        [value]=\"progress_value_session\">\n    </mat-progress-spinner>\n\n    <div class=\"left\">\n        <canvas class= \"canvas\" #canvasEl id=\"mycanvas\" width=640 height=480></canvas> \n        <video autoplay playsinline muted class=\"webcam\" width=\"640\" height=\"480\" #video></video> \n    </div>\n    <div class=\"right\">\n        <p class=\"tittle\">{{text}}</p>\n        <div class=\"right_left\">\n            <img [src]=\"url_image\" alt=\"Exercise\" class=\"image-exercise\">\n        </div>\n        <div class=\"right_right\">\n            <mat-progress-spinner class=\"little_progress\"\n            color=\"warn\"\n            mode=\"determinate\"\n            [value]=\"progress_value_exercise\"\n            [diameter]=\"200\">\n            </mat-progress-spinner>\n        </div>\n    </div>\n   \n</div>","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n import * as posenet from '@tensorflow-models/posenet';\n import * as tf from '@tensorflow/tfjs';\n \n const color = 'aqua';\n const boundingBoxColor = 'red';\n const lineWidth = 1;\n const pointThick = 8\n \n export const tryResNetButtonName = 'tryResNetButton';\n export const tryResNetButtonText = '[New] Try ResNet50';\n const tryResNetButtonTextCss = 'width:100%;text-decoration:underline;';\n const tryResNetButtonBackgroundCss = 'background:#e61d5f;';\n \n function isAndroid() {\n   return /Android/i.test(navigator.userAgent);\n }\n \n function isiOS() {\n   return /iPhone|iPad|iPod/i.test(navigator.userAgent);\n }\n \n export function isMobile() {\n   return isAndroid() || isiOS();\n }\n \n function setDatGuiPropertyCss(propertyText, liCssString, spanCssString = '') {\n   var spans = document.getElementsByClassName('property-name');\n   for (var i = 0; i < spans.length; i++) {\n     var text = spans[i].textContent || spans[i].innerText;\n     if (text == propertyText) {\n       spans[i].parentNode.parentNode.style = liCssString;\n       if (spanCssString !== '') {\n         spans[i].style = spanCssString;\n       }\n     }\n   }\n }\n \n export function updateTryResNetButtonDatGuiCss() {\n   setDatGuiPropertyCss(\n       tryResNetButtonText, tryResNetButtonBackgroundCss,\n       tryResNetButtonTextCss);\n }\n \n /**\n  * Toggles between the loading UI and the main canvas UI.\n  */\n export function toggleLoadingUI(\n     showLoadingUI, loadingDivId = 'loading', mainDivId = 'main') {\n   if (showLoadingUI) {\n     document.getElementById(loadingDivId).style.display = 'block';\n     document.getElementById(mainDivId).style.display = 'none';\n   } else {\n     document.getElementById(loadingDivId).style.display = 'none';\n     document.getElementById(mainDivId).style.display = 'block';\n   }\n }\n \n function toTuple({y, x}) {\n   return [y, x];\n }\n \n export function drawPoint(ctx, y, x, r, color) {\n   ctx.beginPath();\n   ctx.arc(x, y, r, 0, 2 * Math.PI);\n   ctx.fillStyle = color;\n   ctx.fill();\n }\n \n /**\n  * Draws a line on a canvas, i.e. a joint\n  */\n export function drawSegment([ay, ax], [by, bx], color, scale, ctx) {\n   ctx.beginPath();\n   ctx.moveTo(ax * scale, ay * scale);\n   ctx.lineTo(bx * scale, by * scale);\n   ctx.lineWidth = lineWidth;\n   ctx.strokeStyle = color;\n   ctx.stroke();\n }\n \n /**\n  * Draws a pose skeleton by looking up all adjacent keypoints/joints\n  */\n export function drawSkeleton(keypoints, minConfidence, ctx, scale = 1) {\n   const adjacentKeyPoints =\n       posenet.getAdjacentKeyPoints(keypoints, minConfidence);\n \n   adjacentKeyPoints.forEach((keypoints) => {\n     drawSegment(\n         toTuple(keypoints[0].position), toTuple(keypoints[1].position), color,\n         scale, ctx);\n   });\n }\n \n /**\n  * Draw pose keypoints onto a canvas\n  */\n export function drawKeypoints(keypoints, minConfidence, ctx, scale = 1) {\n   \n   for (let i = 0; i < keypoints.length; i++) {\n     const keypoint = keypoints[i];\n \n     if (keypoint.score < minConfidence) {\n       continue;\n     }\n \n     const {y, x} = keypoint.position;\n     drawPoint(ctx, y * scale, x * scale, pointThick, color);\n   }\n }\n \n /**\n  * Draw the bounding box of a pose. For example, for a whole person standing\n  * in an image, the bounding box will begin at the nose and extend to one of\n  * ankles\n  */\n export function drawBoundingBox(keypoints, ctx) {\n   const boundingBox = posenet.getBoundingBox(keypoints);\n \n   ctx.rect(\n       boundingBox.minX, boundingBox.minY, boundingBox.maxX - boundingBox.minX,\n       boundingBox.maxY - boundingBox.minY);\n \n   ctx.strokeStyle = boundingBoxColor;\n   ctx.stroke();\n }\n \n /**\n  * Converts an arary of pixel data into an ImageData object\n  */\n export async function renderToCanvas(a, ctx) {\n   const [height, width] = a.shape;\n   const imageData = new ImageData(width, height);\n \n   const data = await a.data();\n \n   for (let i = 0; i < height * width; ++i) {\n     const j = i * 4;\n     const k = i * 3;\n \n     imageData.data[j + 0] = data[k + 0];\n     imageData.data[j + 1] = data[k + 1];\n     imageData.data[j + 2] = data[k + 2];\n     imageData.data[j + 3] = 255;\n   }\n \n   ctx.putImageData(imageData, 0, 0);\n }\n \n /**\n  * Draw an image on a canvas\n  */\n export function renderImageToCanvas(image, size, canvas) {\n   canvas.width = size[0];\n   canvas.height = size[1];\n   const ctx = canvas.getContext('2d');\n \n   ctx.drawImage(image, 0, 0);\n }\n \n /**\n  * Draw heatmap values, one of the model outputs, on to the canvas\n  * Read our blog post for a description of PoseNet's heatmap outputs\n  * https://medium.com/tensorflow/real-time-human-pose-estimation-in-the-browser-with-tensorflow-js-7dd0bc881cd5\n  */\n export function drawHeatMapValues(heatMapValues, outputStride, canvas) {\n   const ctx = canvas.getContext('2d');\n   const radius = 5;\n   const scaledValues = heatMapValues.mul(tf.scalar(outputStride, 'int32'));\n \n   drawPoints(ctx, scaledValues, radius, color);\n }\n \n /**\n  * Used by the drawHeatMapValues method to draw heatmap points on to\n  * the canvas\n  */\n function drawPoints(ctx, points, radius, color) {\n   const data = points.buffer().values;\n \n   for (let i = 0; i < data.length; i += 2) {\n     const pointY = data[i];\n     const pointX = data[i + 1];\n \n     if (pointX !== 0 && pointY !== 0) {\n       ctx.beginPath();\n       ctx.arc(pointX, pointY, radius, 0, 2 * Math.PI);\n       ctx.fillStyle = color;\n       ctx.fill();\n     }\n   }\n }\n \n /**\n  * Draw offset vector values, one of the model outputs, on to the canvas\n  * Read our blog post for a description of PoseNet's offset vector outputs\n  * https://medium.com/tensorflow/real-time-human-pose-estimation-in-the-browser-with-tensorflow-js-7dd0bc881cd5\n  */\n // export function drawOffsetVectors(\n //     heatMapValues, offsets, outputStride, scale = 1, ctx) {\n //   const offsetPoints =\n //       posenet.singlePose.getOffsetPoints(heatMapValues, outputStride, offsets);\n \n //   const heatmapData = heatMapValues.buffer().values;\n //   const offsetPointsData = offsetPoints.buffer().values;\n \n //   for (let i = 0; i < heatmapData.length; i += 2) {\n //     const heatmapY = heatmapData[i] * outputStride;\n //     const heatmapX = heatmapData[i + 1] * outputStride;\n //     const offsetPointY = offsetPointsData[i];\n //     const offsetPointX = offsetPointsData[i + 1];\n \n //     drawSegment(\n //         [heatmapY, heatmapX], [offsetPointY, offsetPointX], color, scale, ctx);\n //   }\n // }","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { StretchingsComponent } from './stretchings/stretchings.component';\nimport { YogaComponent } from './yoga/yoga.component'\nimport { CongratulationsComponent } from './congratulations/congratulations.component'\n\nconst routes: Routes = [  \n  { path: 'welcome', component: WelcomeComponent },\n  { path: 'menu', component: MenuComponent },\n  { path: 'stretchings', component: StretchingsComponent },\n  { path: 'yoga', component: YogaComponent },\n  { path: 'congratulations', component: CongratulationsComponent},\n  { path:'**', pathMatch: 'full', redirectTo: 'welcome'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}